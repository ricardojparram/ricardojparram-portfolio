---
import Link from "./icons/Link.astro";
import Button from "./Button.astro";
import Github from "./icons/Github.astro";
import TechnhologiesBadge from "./TechnhologiesBadge.astro";
import Modal from "./Modal.astro";
const grid_styles = {
  mobile: "md:col-span-5 md:row-span-2",
  pc: "md:col-span-8 md:row-span-1",
};
const projects = [
  {
    title: "Sistema de Inventario",
    subtitle: "Fundación Centro Médico Wesley",
    description:
      "Es un sistema de gestión de inventario médico para las distintas sedes alrededor del país del Centro Médico Wesley. Éste sistema cumple con la administración de todo tipo de inventario y transacciones entre sedes.",
    img: "/assets/inventario_wesley.webp",
    video: "/assets/inventario_wesley.webm",
    alt: "Work Project Inventario Wesley",
    technologies: ["PHP", "Mysql", "Bootstrap"],
  },
  {
    title: "Cambio Rápido",
    subtitle: "Calcula la conversión del dólar en Venezuela",
    description:
      "Es una prueba de velocidad de internet inspirada en la simplicidad de fast.com. Al igual que tiene la funcionalidad de mostrar tu ip e informacion del ASN.",
    link: "https://netest-three.vercel.app/",
    github: "https://github.com/ricardojparram/network-test-app",
    img: "/assets/cambio-rapido.png",
    alt: "Personal project NETEST",
    technologies: ["Astro", "React", "Tailwind"],
    mobile: true,
  },
  {
    title: "RJPM.UI",
    subtitle: "Easy-to-Use Tailwind CSS Agnostic Components",
    description:
      "Es una librería de componentes hechos con TailwindCSS. Posee versiones de los componentes tanto para React como Astro.",
    link: "https://rjpm-ui.vercel.app/",
    github: "https://github.com/ricardojparram/rjpm-ui-components",
    img: "/assets/rjpm-ui.webp",
    video: "/assets/rjpm-ui.webm",
    alt: "Personal project rjpm.ui",
    technologies: ["Astro", "React", "Tailwind"],
  },
  {
    title: "Cambio Rápido",
    subtitle: "Conversión del dólar en Venezuela",
    description:
      "Es una prueba de velocidad de internet inspirada en la simplicidad de fast.com. Al igual que tiene la funcionalidad de mostrar tu ip e informacion del ASN.",
    link: "https://netest-three.vercel.app/",
    github: "https://github.com/ricardojparram/network-test-app",
    img: "/assets/cambio-rapido.png",
    alt: "Personal project NETEST",
    technologies: ["Astro", "React", "Tailwind"],
    mobile: true,
  },

  {
    title: "NETEST",
    subtitle: "Check Your Internet Speed in Seconds",
    description:
      "Es una prueba de velocidad de internet inspirada en la simplicidad de fast.com. Al igual que tiene la funcionalidad de mostrar tu ip e informacion del ASN.",
    link: "https://netest-three.vercel.app/",
    github: "https://github.com/ricardojparram/network-test-app",
    img: "/assets/netest.webp",
    video: "/assets/netest.webm",
    alt: "Personal project NETEST",
    technologies: ["Astro", "React", "Tailwind"],
  },
  {
    title: "NETEST",
    subtitle: "Check Your Internet Speed in Seconds",
    description:
      "Es una prueba de velocidad de internet inspirada en la simplicidad de fast.com. Al igual que tiene la funcionalidad de mostrar tu ip e informacion del ASN.",
    link: "https://netest-three.vercel.app/",
    github: "https://github.com/ricardojparram/network-test-app",
    img: "/assets/netest.webp",
    video: "/assets/netest.webm",
    alt: "Personal project NETEST",
    technologies: ["Astro", "React", "Tailwind"],
  },
];
---

<div
  class="grid grid-cols-1 md:grid-cols-13 w-full md:grid-rows-[repeat(9,minmax(50px,100px)] gap-6 my-10"
>
  {
    projects.map((project, i) => (
      <article
        class:list={[
          "flex flex-col gap-y-6 text-pretty group/project transition-transform duration-300 relative",
          grid_styles[project.mobile ? "mobile" : "pc"],
        ]}
        data-project-id={"project-" + i}
      >
        <div
          class:list={[
            project.mobile
              ? "aspect-[14/16] md:aspect-[9.4/18]"
              : "aspect-video",
            "overflow-hidden rounded-lg w-full relative shadow-xl",
          ]}
        >
          <div class="absolute inset-0">
            <div class="relative w-full h-full">
              {[0, 1].map(() => (
                <div
                  class:list={[
                    "absolute z-10 inset-x-0 bottom-0 ",
                    "bg-gradient-to-b from-transparent via-slate-500/10 to-slate-500/30 group-hover/project:via-slate-400/10 group-hover/project:to-slate-400/40 transition-colors duration-300",
                    "mask-to-b backdrop-blur-md",
                    project.mobile ? "h-[20%]" : "h-[30%]",
                  ]}
                />
              ))}
              <div class="absolute flex justify-between z-10 inset-x-0 bottom-0">
                <h3 class="text-slate-100 font-bold px-4 py-2">
                  {project.title}
                </h3>
                <div class="flex gap-2 self-end px-4 py-2">
                  <TechnhologiesBadge
                    icons={project.technologies}
                    class="w-6 h-6"
                  />
                </div>
              </div>
            </div>
          </div>
          <img
            decoding="async"
            loading="lazy"
            src={project.img}
            alt={project.alt + " image"}
            class:list={[
              "aspect-auto",
              "object-cover object-top w-full h-full absolute transition-opacity duration-300 ",
              {
                "hidden md:block md:opacity-100 md:group-hover/project:opacity-0":
                  project.video,
              },
            ]}
          />

          {project.video && (
            <video
              autoplay
              loop
              muted
              class="object-cover w-full h-full absolute transition-opacity duration-300 opacity-100 md:opacity-0 md:group-hover/project:opacity-100 md:group-hover/project:relative"
            >
              <source src={project.video} type="video/webm" />
            </video>
          )}
        </div>
      </article>
    ))
  }
</div>
{
  projects.map((project, i) => (
    <Modal id={"project-" + i}>
      <div class="p-5">
        <div class="aspect-video rounded-lg overflow-hidden w-full relative mb-4">
          {project.video ? (
            <video
              autoplay
              loop
              muted
              class="object-cover w-full h-full absolute aspect-video"
            >
              <source src={project.video} type="video/webm" />
            </video>
          ) : (
            <img
              decoding="async"
              loading="lazy"
              src={project.img}
              alt={project.alt + " image"}
              class={`object-cover w-full absolute aspect-video transition-opacity duration-300 ${project.video ? "hidden md:block md:opacity-100 md:group-hover/project:opacity-0" : ""}`}
            />
          )}
        </div>
        <div class="col-span-2 md:col-span-1 flex flex-col gap-y-3 py-2">
          <h3 class="strong-text font-extrabold text-xl dark:group-hover/project:text-lime-500 group/title">
            <strong class="">{project.title}</strong> - {project.subtitle}
          </h3>

          <p class="text-lg">{project.description}</p>
          <div class="grid grid-cols-3">
            <span class="col-span-2 flex gap-2 items-center">
              {project.github && (
                <Button link={project.github} class="text-base w-fit">
                  <Github class="w-5 h-5" />
                  Código
                </Button>
              )}
              {project.link && (
                <Button link={project.link} class="text-base w-fit">
                  <Link class="w-4 h-4" />
                  Visitar
                </Button>
              )}
            </span>
            <span class="col-span-1 flex gap-3 items-center">
              <TechnhologiesBadge
                icons={project.technologies}
                class="w-5 h-5"
              />
            </span>
          </div>
        </div>
      </div>
    </Modal>
  ))
}

<script define:vars={{ projects }} is:inline>
  const $projects = document.querySelectorAll("[data-project-id]");
  $projects.forEach((project) => {
    project.addEventListener("click", () => {
      console.log(project.dataset.projectId);
      const modal = document.querySelector(`#${project.dataset.projectId}`);
      modal.showModal();
    });
  });
</script>
